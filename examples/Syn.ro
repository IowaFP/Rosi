con : forall l t z. {l := t} < z => #l -> t -> Sigma z
con = \l x. inj (l := x)

reify0 : forall z t. (Sigma z -> t) -> Pi ((\X. X -> t) z)
reify0 = /\ z t. \f. syn [\X. X -> t] (\l x. f (con l x))

-- reify : forall z t. (Sigma z -> t) -> Pi (z -> t)
-- reify = /\ z t. \f. syn [\X. X -> t] (\l x. f (con l x))